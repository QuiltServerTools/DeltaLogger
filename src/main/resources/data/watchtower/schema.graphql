schema {
  query: Query
}

type Query {
  players(offset: Int, limit: Int): [Player]!
  playerById(id: Int): Player
  playerByUUID(uuid: ID): Player
  placements(offset: Int, limit: Int): [Placement]!
  transactions(offset: Int, limit: Int): [Transaction]!
  killedEntities(offset: Int, limit: Int): [KilledEntity]!
  mobGrief(offset: Int, limit: Int): [MobGrief]!
}

type Player {
  id: Int
  name: String
  uuid: ID
  lastOnlineTime: String
}

type Placement {
  id: Int
  playerName: String
  time: String
  blockType: ID
  x: Int
  y: Int
  z: Int
  placed: Boolean
  dimension: ID
  state: String
}

type Transaction {
  id: Int
  playerName: String
  time: String
  itemType: ID
  count: Int
  containerUUID: ID
}

type KilledEntity {
  id: Int
  name: String
  source: String
  killer: String
  dimension: ID
  time: String
  x: Int
  y: Int
  z: Int
}

type MobGrief {
  id: Int
  time: String
  entityType: String
  target: String
  dimension: ID
  x: Int
  y: Int
  z: Int
}