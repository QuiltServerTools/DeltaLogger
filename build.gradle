plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'maven-publish'
}

repositories {
    maven {
        url = "https://maven.nucleoid.xyz"
    }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.minecraft_version + '-' + project.mod_version
group = project.maven_group
dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Luckperms API, official one coming soon (tm)
	modImplementation 'me.lucko:fabric-permissions-api:0.1-SNAPSHOT'
	include 'me.lucko:fabric-permissions-api:0.1-SNAPSHOT'

    implementation(include('com.zaxxer:HikariCP:3.4.2'))
    implementation(include('org.jdbi:jdbi3-core:3.12.2'))

    include 'org.antlr:antlr4-runtime:4.7.2'
    include 'com.github.ben-manes.caffeine:caffeine:2.8.0'
    include 'io.leangen.geantyref:geantyref:1.3.7'

    implementation(include('org.jdbi:jdbi3-sqlite:3.12.2'))
    implementation(include('org.xerial:sqlite-jdbc:3.32.3.2'))
    implementation(include('mysql:mysql-connector-java:8.0.19'))
    implementation(include('com.graphql-java:graphql-java:16.1'))

    include 'com.graphql-java:java-dataloader:2.2.3'
    include 'org.reactivestreams:reactive-streams:1.0.3'

    implementation(shadow('com.auth0:java-jwt:3.11.0'))
    implementation(shadow('io.javalin:javalin:3.12.0'))
    implementation(shadow('io.javalin:javalin-graphql:3.12.0'))

    shadow('org.slf4j:slf4j-simple:1.7.30')
    include 'org.slf4j:slf4j-api:1.8.0-beta4'
    compile "org.slf4j:slf4j-simple:1.8.0-beta4"

    implementation(shadow('io.vavr:vavr:0.10.3'))

    // Server-side translations
    modImplementation 'fr.catcore:server-translations-api:1.4.0'
    include 'fr.catcore:server-translations-api:1.4.0'
    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}
processResources {
    inputs.property "version", project.version
    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}
// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    // exclude 'org.slf4j.*'
    from sourceSets.main.allSource
}
shadowJar {
    // relocate 'org.jdbi.v3.core', 'shadow.dl.jdbicore'
    minimize {
        exclude(dependency("org.eclipse.jetty.websocket:.*:.*"))
        exclude(dependency("com.github.ben-manes.caffeine:.*:.*"))
    }
    configurations = [project.configurations.shadow]
    classifier = "shadow"
}
jar {
    from "LICENSE"
}
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "${project.group}.${project.archivesBaseName}.shadow"
}
tasks.shadowJar.dependsOn tasks.relocateShadowJar
remapJar {
    dependsOn shadowJar
    input.set shadowJar.archiveFile.get()
}
// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}